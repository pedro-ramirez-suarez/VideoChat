@{
    ViewBag.Title = "Video Chat";
}

<div class="alert alert-warning" role="alert" style="margin-top:20px">
    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    <span class="sr-only">Alert!</span>
    Give(Allow) permission to webcam and micro
</div>

<div class="row" style="margin-top:15px">

    <div class="col-lg-6">
        <h4>You</h4>

        <video id="video" width="320" height="240" autoplay></video>
        <audio controls src="" id="audio" style="visibility:hidden"></audio>
        @*<button id="snap">Snap Photo</button>*@

    </div>

    <div class="col-lg-4">
        <h4 id="remoteUser"></h4>
        <img id="remoteVideo" width="320" height="240" />
        <canvas id="canvas" width="120" height="90" style="visibility:hidden"></canvas>

    </div>
</div>

@Scripts.Render("~/bundles/jquery")
<script src="@Url.Content("~/Scripts/NeedletailMvc.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/VideoChat.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/record.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/recorder.js")" type="text/javascript"></script>


<script language="javascript" type="text/javascript">

    //global variables
    var pushVideoUrl = '@Url.Action("PushVideo","Home")';
    var pushAudioUrl = '@Url.Action("PushAudio","Home")';
    var pushVideoFragmentUrl = '@Url.Action("PushVideoFragment", "Home")';
    
    var updateAudioUrl = '@Url.Action("GetAudio","Home")';
    var WORKER_PATH = '@Url.Content("~/scripts/recorderWorker.js")';
    var canvas = document.getElementById("canvas"),
        context = canvas.getContext("2d"),
        video = document.getElementById("video"),
        videoObj = { "video": true },
        errBack = function (error) {
            console.log("Video capture error: ", error.code);
        };
    var remoteVideo = document.getElementById('remoteVideo');


    //Web Cam and communications initiazliation
    window.addEventListener("DOMContentLoaded", function () {

        //Needletail MVC SSE initialization
        var twoway = '@Url.Action("Remote", "Api", new { })';
        needleTail.initialize(twoway);

        
        //constantly show remote frames
        updateVideo();
        //constantly store frames
        pushFrame();

        //prepare stream to be sent
        setInterval(function () {
            //push audio and video to the server
            prepareStream();
        }, 1000);


        // Put video listeners into place
        if (navigator.getUserMedia) { // Standard
            navigator.getUserMedia(videoObj, function (stream) {
                video.src = stream;
                video.play();
            }, errBack);
        } else if (navigator.webkitGetUserMedia) { // WebKit-prefixed
            navigator.webkitGetUserMedia(videoObj, function (stream) {
                video.src = window.webkitURL.createObjectURL(stream);
                video.play();
            }, errBack);
        }
        else if (navigator.mozGetUserMedia) { // Firefox-prefixed
            navigator.mozGetUserMedia(videoObj, function (stream) {
                video.src = window.URL.createObjectURL(stream);
                video.play();
            }, errBack);
        }
    }, false);



</script>

